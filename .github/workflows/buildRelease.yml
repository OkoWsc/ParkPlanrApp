name: Release build app

on:
  workflow_dispatch

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Install NPM dependancies
        run: sudo npm i -g nativescript@latest firebase-tools

      - name: Setup ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Use gcloud CLI
        run: gcloud info

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install fastlane
        run: bundle install
        
      - name: Prepare signing keys and API
        run: |
            echo $ANDROID_KEY_BASE64 | base64 -d > ./key.jks;
            echo $PLAY_STORE_SERVICE_ACCOUNT > googlePlayKey.json;
            keytool -list -v -keystore ./key.jks -alias "${KEY_STORE_ALIAS}" -storepass "${KEY_STORE_ALIAS_PASSWORD}" -keypass "${KEY_STORE_ALIAS_PASSWORD}"|grep "Certificate fingerprints" -A 3
            keytool -exportcert -keystore ./key.jks -alias "${KEY_STORE_ALIAS}" -storepass "${KEY_STORE_ALIAS_PASSWORD}" -keypass "${KEY_STORE_ALIAS_PASSWORD}"|openssl sha1 -binary | openssl base64
        env:
          ANDROID_KEY_BASE64: ${{ secrets.ANDROID_KEY_BASE64 }}
          KEY_STORE_ALIAS: ${{ secrets.KEY_STORE_ALIAS }}
          KEY_STORE_ALIAS_PASSWORD: ${{ secrets.KEY_STORE_ALIAS_PASSWORD }}
          PLAY_STORE_SERVICE_ACCOUNT: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT }}

      - name: Build release apk for android
        run: npm run buildReleaseAndroid
        env:
          ANDROID_KEY_BASE64: ${{ secrets.ANDROID_KEY_BASE64 }}
          KEY_STORE_ALIAS: ${{ secrets.KEY_STORE_ALIAS }}
          KEY_STORE_ALIAS_PASSWORD: ${{ secrets.KEY_STORE_ALIAS_PASSWORD }}

# @todo renable build artifact upload after upgrading github
#      - name: Upload build artifact to github
#        uses: actions/upload-artifact@v2
#        with:
#          name: release.apk
#          path: debug.apk

      - name: Run tests on Firebase Test Lab
        uses: asadmansr/Firebase-Test-Lab-Action@v1.0
        with:
          arg-spec: 'tests.yml:android-pixel-2-virtual-portrait'
        env:
          SERVICE_ACCOUNT: ${{ secrets.GCP_SA_KEY }}

      - name: Distribute to firebase app testing
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}            
        run: npm run distributeReleaseApptestingAndroid "CI RELEASE Build-$GITHUB_REF $GITHUB_SHA"

      - name: Create Google Play internal track build
        run: bundle exec fastlane GPlayInternal