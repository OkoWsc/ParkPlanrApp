version: 2.1

executors:
  nodeandroiddocker:
    docker:
      - image: circleci/android:api-28-node
    working_directory: ~/NativescriptAppBuild

fast-checkout: &fast-checkout
  attach_workspace:
    at: ~/

jobs:
  CheckoutCode:
    executor: nodeandroiddocker
    steps:
        - checkout
        - run: rm -rf .git
        - persist_to_workspace:
            root: ~/
            paths:
                - NativescriptAppBuild

  PrepareProject:
    executor: nodeandroiddocker
    steps:
      - *fast-checkout

      - run:
          name: Install npm modules
          command: |
            sudo npm i -g npm-check-updates nativescript firebase-tools --ignore-scripts --unsafe-perm --no-progress;
            npm i --no-progress;
            tns usage-reporting disable && tns error-reporting disable;

      - run:
          name: Update android manifest and iOS Info.plist versions
          command: |
            node ./scripts/update-version.js

      - run:
          name: Build setup
          command: |
            ./UpdateAll.sh;
            rm -rf platforms;

      - persist_to_workspace:
          root: ~/
          paths:
              - NativescriptAppBuild

  PrepareAndroid:
    executor: nodeandroiddocker
    steps:
      - *fast-checkout

      - run:
          name: Adding platform
          command: |
            sudo npm i -g npm-check-updates nativescript --ignore-scripts --unsafe-perm --no-progress;
            tns platform add android;
            cp ./app/App_Resources/Android/gradle.properties ./platforms/android/gradle.properties;
            echo $ANDROID_KEY_BASE64 | base64 -d > ./key.jks;
            echo $PLAY_STORE_JWT > ./jwt.json;

      - persist_to_workspace:
          root: ~/
          paths:
              - NativescriptAppBuild


  BuildReleaseAndroid:
    executor: nodeandroiddocker
    steps:
      - *fast-checkout

      - run:
          name: Build signed app
          environment:
            ANDROID_KEY_BASE64: ""
            PLAY_STORE_JWT: ""
          command: |
            sudo npm i -g npm-check-updates nativescript --ignore-scripts --unsafe-perm --no-progress;
            tns build android --release --key-store-path ./key.jks --key-store-password "${KEY_STORE_PASSWORD}" --key-store-alias "${KEY_STORE_ALIAS}" --key-store-alias-password "${KEY_STORE_ALIAS_PASSWORD}" --copy-to ./dist/build.apk;

      - persist_to_workspace:
          root: ~/
          paths:
              - NativescriptAppBuild

      - store_artifacts:
          path: ./dist

  DistributeAndroid:
    executor: nodeandroiddocker
    steps:
      - *fast-checkout

      - run:
          name: Publish apk to firebase app distribution
          command: |
            sudo npm i -g firebase-tools --ignore-scripts --unsafe-perm --no-progress;
            export GIT_COMMIT_MESSAGE="$(git log --format=%B -n 1 $CIRCLE_SHA1)"
            echo ${APP_DIST_ANDROID_GROUP}|base64;
            echo $GIT_COMMIT_MESSAGE;
            firebase appdistribution:distribute ./dist/build.apk --app ${APP_DIST_ANDROID_ID} --release-notes "$GIT_COMMIT_MESSAGE" --groups ${APP_DIST_ANDROID_GROUP} --token ${FIREBASE_TOOLS_TOKEN}


  PrepareiOS:
    executor: nodeandroiddocker
    steps:
      - *fast-checkout

      - run:
          name: Preparing iOS Platform
          command: |
            echo $IOS_CERTIFICATE_BASE64 | base64 -d > ./iOSCert.p12;

      - persist_to_workspace:
          root: ~/
          paths:
              - NativescriptAppBuild

  BuildReleaseiOS:
    executor: nodeandroiddocker
    steps:
      - *fast-checkout

      - run:
          name: Building for iOS
          command: |
            sudo npm i -g npm-check-updates nativescript nativescript-cloud --ignore-scripts --unsafe-perm --no-progress;
            echo $IOS_CERTIFICATE_BASE64 | base64 -d > ./iOSCert.p12;
            tns dev-login ${NATIVESCRIPT_CLOUD_USERNAME} ${NATIVESCRIPT_CLOUD_PASSWORD}
            tns accept eula 
            tns cloud build ios --accountId ${NATIVESCRIPT_CLOUD_ACCOUNT_ID} --certificate iOSCert.p12 --certificatePassword ${IOS_CERTIFICATE_PASSWORD} --provision ProvisioningProfile.mobileprovision
            find .cloud

#      - run:
#          name: Publish app to internal track on Google Play
#          command: |
#            node ./scripts/upload-package.js

      - store_artifacts:
          path: ./dist

  Completed:
    executor: nodeandroiddocker
    steps:
      - run:
          name: Completed
          command: |
            echo "Build completed"

workflows:
  version: 2
  BuildAndDistribute:
    jobs:
      - CheckoutCode
      - PrepareProject:
            requires:
                  - CheckoutCode
#      - PrepareAndroid:
#            requires:
#                  - PrepareProject
#      - BuildReleaseAndroid:
#            requires:
#                  - PrepareAndroid
#      - DistributeAndroid:
#            requires:
#                  - BuildReleaseAndroid

      - PrepareiOS:
            requires:
                  - PrepareProject
      - BuildReleaseiOS:
            requires:
                  - PrepareiOS

      - Completed:
            requires:
#                  - DistributeAndroid
                  - BuildReleaseiOS

#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /.*/
